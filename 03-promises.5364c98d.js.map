{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAe,SAC9BC,OAAQF,SAASC,cAAe,UAChCE,WAAYH,SAASC,cAAe,uBACpCG,UAAWJ,SAASC,cAAe,sBACnCI,YAAaL,SAASC,cAAe,yBAGvC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,MAEpBA,MAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,UAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAxB,GAASyB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,UAIzEnB,EAAKC,KAAK2B,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAIJ,IAHA,IAAMC,EAAOC,OAAOhC,EAAKM,UAAU2B,OAC7Bd,EAAQa,OAAOhC,EAAKK,WAAW4B,OAC/BC,EAASF,OAAOhC,EAAKO,YAAY0B,OAC9BE,EAAI,EAAGA,EAAID,EAAQC,IAC1B3B,EAAc2B,EAAI,EAAGhB,EAAQgB,EAAIJ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector(`.form`),\n  button: document.querySelector(`button`),\n  inputDelay: document.querySelector(`input[name=\"delay\"]`),\n  inputStep: document.querySelector(`input[name=\"step\"]`),\n  inputAmount: document.querySelector(`input[name=\"amount\"]`)\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n    \nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const step = Number(refs.inputStep.value);\n  const delay = Number(refs.inputDelay.value);\n  const amount = Number(refs.inputAmount.value);\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step);\n  }\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","button","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","evt","preventDefault","step","Number","value","amount","i"],"version":3,"file":"03-promises.5364c98d.js.map"}